"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\nconst MAX_REDIRECTS = 5;\nconst rolePaths = {\n    Admin: [\n        \"/admin/dashBoard\",\n        \"/admin/addUser\",\n        \"/admin/editUser\"\n    ],\n    Instructor: [\n        \"/instructor/dashBoard\",\n        \"/instructor/profile\",\n        \"/instructor/addExam\"\n    ],\n    ExamOfficer: [\n        \"/exam-officer/dashBoard\",\n        \"/exam-officer/profile\",\n        \"/exam-officer/addSubject\",\n        \"/exam-officer/backupExam\"\n    ],\n    TechUnit: [\n        \"/tech/dashBoard\",\n        \"/tech/profile\",\n        \"/tech/reviewExam\",\n        \"/tech/printExam\",\n        \"/tech/profile\"\n    ]\n};\nasync function middleware(request) {\n    console.log(\"-------- Middleware Start --------\");\n    console.log(\"Request path:\", request.nextUrl.pathname);\n    const redirectCount = parseInt(request.headers.get(\"x-redirect-count\") || \"0\");\n    console.log(\"Current redirect count:\", redirectCount);\n    if (redirectCount >= MAX_REDIRECTS) {\n        console.log(\"Max redirects reached, going to error page\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(\"/error\", request.url));\n    }\n    const userEmail = request.cookies.get(\"userEmail\")?.value;\n    const userRole = request.cookies.get(\"role\")?.value;\n    const userId = request.cookies.get(\"userId\")?.value;\n    console.log(\"User email:\", userEmail);\n    console.log(\"User role:\", userRole);\n    console.log(\"User ID:\", userId);\n    if (request.nextUrl.pathname === \"/sign-in\" || request.nextUrl.pathname === \"/error\") {\n        console.log(\"On sign-in or error page, no redirect\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    }\n    if (!userEmail) {\n        console.log(\"No user email, redirecting to sign-in\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(\"/sign-in\", request.url));\n    }\n    const allowedPaths = rolePaths[userRole];\n    console.log(\"Allowed paths for role:\", allowedPaths);\n    if (allowedPaths) {\n        // Check if the current path starts with any of the allowed paths\n        const isAllowedPath = allowedPaths.some((path)=>request.nextUrl.pathname.startsWith(path));\n        console.log(\"Is allowed path:\", isAllowedPath);\n        if (!isAllowedPath) {\n            console.log(\"User tried to access a restricted path\");\n            // Special case for Admin trying to access editUser page\n            if (userRole === \"Admin\" && request.nextUrl.pathname.startsWith(\"/admin/editUser/\")) {\n                console.log(\"Admin accessing editUser page\");\n                const redirectUrl = new URL(`/admin/editUser/${userId}`, request.url);\n                console.log(\"Redirecting to:\", redirectUrl.toString());\n                const newResponse = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(redirectUrl);\n                newResponse.headers.set(\"x-redirect-count\", (redirectCount + 1).toString());\n                return newResponse;\n            }\n            console.log(\"Redirecting to default role path\");\n            const defaultRedirectUrl = new URL(allowedPaths[0], request.url);\n            console.log(\"Default redirect URL:\", defaultRedirectUrl.toString());\n            const newResponse = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(defaultRedirectUrl);\n            newResponse.headers.set(\"x-redirect-count\", (redirectCount + 1).toString());\n            return newResponse;\n        }\n    } else {\n        console.log(\"User role not recognized, redirecting to default path\");\n        const redirectUrl = getRoleBasedRedirect(userRole, request.url);\n        if (redirectUrl) {\n            console.log(\"Redirecting to role-based URL:\", redirectUrl.toString());\n            const newResponse = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(redirectUrl);\n            newResponse.headers.set(\"x-redirect-count\", (redirectCount + 1).toString());\n            return newResponse;\n        }\n    }\n    console.log(\"No redirect needed, proceeding to requested page\");\n    console.log(\"-------- Middleware End --------\");\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n}\nfunction getRoleBasedRedirect(role, baseUrl) {\n    console.log(\"Getting role-based redirect for role:\", role);\n    let redirectUrl = null;\n    switch(role){\n        case \"Admin\":\n            redirectUrl = new URL(\"/admin/dashBoard\", baseUrl);\n            break;\n        case \"Instructor\":\n            redirectUrl = new URL(\"/instructor/dashBoard\", baseUrl);\n            break;\n        case \"ExamOfficer\":\n            redirectUrl = new URL(\"/exam-officer/dashBoard\", baseUrl);\n            break;\n        case \"TechUnit\":\n            redirectUrl = new URL(\"/tech/dashBoard\", baseUrl);\n            break;\n        default:\n            redirectUrl = null;\n    }\n    console.log(\"Redirect URL:\", redirectUrl?.toString() || \"null\");\n    return redirectUrl;\n}\nconst config = {\n    matcher: [\n        \"/((?!api|_next/static|_next/image|favicon.ico|assets).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbWlkZGxld2FyZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0Q7QUFFeEQsTUFBTUMsZ0JBQWdCO0FBRXRCLE1BQU1DLFlBQVk7SUFDaEJDLE9BQU87UUFBQztRQUFvQjtRQUFrQjtLQUFrQjtJQUNoRUMsWUFBWTtRQUNWO1FBQ0E7UUFDQTtLQUNEO0lBQ0RDLGFBQWE7UUFDWDtRQUNBO1FBQ0E7UUFDQTtLQUNEO0lBQ0RDLFVBQVU7UUFDUjtRQUNBO1FBQ0E7UUFDQTtRQUNBO0tBQ0Q7QUFDSDtBQUVPLGVBQWVDLFdBQVdDLE9BQW9CO0lBQ25EQyxRQUFRQyxHQUFHLENBQUM7SUFDWkQsUUFBUUMsR0FBRyxDQUFDLGlCQUFpQkYsUUFBUUcsT0FBTyxDQUFDQyxRQUFRO0lBRXJELE1BQU1DLGdCQUFnQkMsU0FDcEJOLFFBQVFPLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHVCQUF1QjtJQUU3Q1AsUUFBUUMsR0FBRyxDQUFDLDJCQUEyQkc7SUFFdkMsSUFBSUEsaUJBQWlCWixlQUFlO1FBQ2xDUSxRQUFRQyxHQUFHLENBQUM7UUFDWixPQUFPVixxREFBWUEsQ0FBQ2lCLFFBQVEsQ0FBQyxJQUFJQyxJQUFJLFVBQVVWLFFBQVFXLEdBQUc7SUFDNUQ7SUFFQSxNQUFNQyxZQUFZWixRQUFRYSxPQUFPLENBQUNMLEdBQUcsQ0FBQyxjQUFjTTtJQUNwRCxNQUFNQyxXQUFXZixRQUFRYSxPQUFPLENBQUNMLEdBQUcsQ0FBQyxTQUFTTTtJQUM5QyxNQUFNRSxTQUFTaEIsUUFBUWEsT0FBTyxDQUFDTCxHQUFHLENBQUMsV0FBV007SUFFOUNiLFFBQVFDLEdBQUcsQ0FBQyxlQUFlVTtJQUMzQlgsUUFBUUMsR0FBRyxDQUFDLGNBQWNhO0lBQzFCZCxRQUFRQyxHQUFHLENBQUMsWUFBWWM7SUFFeEIsSUFDRWhCLFFBQVFHLE9BQU8sQ0FBQ0MsUUFBUSxLQUFLLGNBQzdCSixRQUFRRyxPQUFPLENBQUNDLFFBQVEsS0FBSyxVQUM3QjtRQUNBSCxRQUFRQyxHQUFHLENBQUM7UUFDWixPQUFPVixxREFBWUEsQ0FBQ3lCLElBQUk7SUFDMUI7SUFFQSxJQUFJLENBQUNMLFdBQVc7UUFDZFgsUUFBUUMsR0FBRyxDQUFDO1FBQ1osT0FBT1YscURBQVlBLENBQUNpQixRQUFRLENBQUMsSUFBSUMsSUFBSSxZQUFZVixRQUFRVyxHQUFHO0lBQzlEO0lBRUEsTUFBTU8sZUFBZXhCLFNBQVMsQ0FBQ3FCLFNBQW1DO0lBQ2xFZCxRQUFRQyxHQUFHLENBQUMsMkJBQTJCZ0I7SUFFdkMsSUFBSUEsY0FBYztRQUNoQixpRUFBaUU7UUFDakUsTUFBTUMsZ0JBQWdCRCxhQUFhRSxJQUFJLENBQUMsQ0FBQ0MsT0FDdkNyQixRQUFRRyxPQUFPLENBQUNDLFFBQVEsQ0FBQ2tCLFVBQVUsQ0FBQ0Q7UUFFdENwQixRQUFRQyxHQUFHLENBQUMsb0JBQW9CaUI7UUFFaEMsSUFBSSxDQUFDQSxlQUFlO1lBQ2xCbEIsUUFBUUMsR0FBRyxDQUFDO1lBRVosd0RBQXdEO1lBQ3hELElBQ0VhLGFBQWEsV0FDYmYsUUFBUUcsT0FBTyxDQUFDQyxRQUFRLENBQUNrQixVQUFVLENBQUMscUJBQ3BDO2dCQUNBckIsUUFBUUMsR0FBRyxDQUFDO2dCQUNaLE1BQU1xQixjQUFjLElBQUliLElBQUksQ0FBQyxnQkFBZ0IsRUFBRU0sT0FBTyxDQUFDLEVBQUVoQixRQUFRVyxHQUFHO2dCQUNwRVYsUUFBUUMsR0FBRyxDQUFDLG1CQUFtQnFCLFlBQVlDLFFBQVE7Z0JBQ25ELE1BQU1DLGNBQWNqQyxxREFBWUEsQ0FBQ2lCLFFBQVEsQ0FBQ2M7Z0JBQzFDRSxZQUFZbEIsT0FBTyxDQUFDbUIsR0FBRyxDQUNyQixvQkFDQSxDQUFDckIsZ0JBQWdCLEdBQUdtQixRQUFRO2dCQUU5QixPQUFPQztZQUNUO1lBRUF4QixRQUFRQyxHQUFHLENBQUM7WUFDWixNQUFNeUIscUJBQXFCLElBQUlqQixJQUFJUSxZQUFZLENBQUMsRUFBRSxFQUFFbEIsUUFBUVcsR0FBRztZQUMvRFYsUUFBUUMsR0FBRyxDQUFDLHlCQUF5QnlCLG1CQUFtQkgsUUFBUTtZQUNoRSxNQUFNQyxjQUFjakMscURBQVlBLENBQUNpQixRQUFRLENBQUNrQjtZQUMxQ0YsWUFBWWxCLE9BQU8sQ0FBQ21CLEdBQUcsQ0FDckIsb0JBQ0EsQ0FBQ3JCLGdCQUFnQixHQUFHbUIsUUFBUTtZQUU5QixPQUFPQztRQUNUO0lBQ0YsT0FBTztRQUNMeEIsUUFBUUMsR0FBRyxDQUFDO1FBQ1osTUFBTXFCLGNBQWNLLHFCQUFxQmIsVUFBVWYsUUFBUVcsR0FBRztRQUM5RCxJQUFJWSxhQUFhO1lBQ2Z0QixRQUFRQyxHQUFHLENBQUMsa0NBQWtDcUIsWUFBWUMsUUFBUTtZQUNsRSxNQUFNQyxjQUFjakMscURBQVlBLENBQUNpQixRQUFRLENBQUNjO1lBQzFDRSxZQUFZbEIsT0FBTyxDQUFDbUIsR0FBRyxDQUNyQixvQkFDQSxDQUFDckIsZ0JBQWdCLEdBQUdtQixRQUFRO1lBRTlCLE9BQU9DO1FBQ1Q7SUFDRjtJQUVBeEIsUUFBUUMsR0FBRyxDQUFDO0lBQ1pELFFBQVFDLEdBQUcsQ0FBQztJQUNaLE9BQU9WLHFEQUFZQSxDQUFDeUIsSUFBSTtBQUMxQjtBQUVBLFNBQVNXLHFCQUNQQyxJQUF3QixFQUN4QkMsT0FBZTtJQUVmN0IsUUFBUUMsR0FBRyxDQUFDLHlDQUF5QzJCO0lBQ3JELElBQUlOLGNBQTBCO0lBQzlCLE9BQVFNO1FBQ04sS0FBSztZQUNITixjQUFjLElBQUliLElBQUksb0JBQW9Cb0I7WUFDMUM7UUFDRixLQUFLO1lBQ0hQLGNBQWMsSUFBSWIsSUFBSSx5QkFBeUJvQjtZQUMvQztRQUNGLEtBQUs7WUFDSFAsY0FBYyxJQUFJYixJQUFJLDJCQUEyQm9CO1lBQ2pEO1FBQ0YsS0FBSztZQUNIUCxjQUFjLElBQUliLElBQUksbUJBQW1Cb0I7WUFDekM7UUFDRjtZQUNFUCxjQUFjO0lBQ2xCO0lBQ0F0QixRQUFRQyxHQUFHLENBQUMsaUJBQWlCcUIsYUFBYUMsY0FBYztJQUN4RCxPQUFPRDtBQUNUO0FBRU8sTUFBTVEsU0FBUztJQUNwQkMsU0FBUztRQUFDO0tBQTJEO0FBQ3ZFLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbWlkZGxld2FyZS50cz80MjJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XHJcblxyXG5jb25zdCBNQVhfUkVESVJFQ1RTID0gNTtcclxuXHJcbmNvbnN0IHJvbGVQYXRocyA9IHtcclxuICBBZG1pbjogWycvYWRtaW4vZGFzaEJvYXJkJywgJy9hZG1pbi9hZGRVc2VyJywgJy9hZG1pbi9lZGl0VXNlciddLFxyXG4gIEluc3RydWN0b3I6IFtcclxuICAgICcvaW5zdHJ1Y3Rvci9kYXNoQm9hcmQnLFxyXG4gICAgJy9pbnN0cnVjdG9yL3Byb2ZpbGUnLFxyXG4gICAgJy9pbnN0cnVjdG9yL2FkZEV4YW0nLFxyXG4gIF0sXHJcbiAgRXhhbU9mZmljZXI6IFtcclxuICAgICcvZXhhbS1vZmZpY2VyL2Rhc2hCb2FyZCcsXHJcbiAgICAnL2V4YW0tb2ZmaWNlci9wcm9maWxlJyxcclxuICAgICcvZXhhbS1vZmZpY2VyL2FkZFN1YmplY3QnLFxyXG4gICAgJy9leGFtLW9mZmljZXIvYmFja3VwRXhhbScsXHJcbiAgXSxcclxuICBUZWNoVW5pdDogW1xyXG4gICAgJy90ZWNoL2Rhc2hCb2FyZCcsXHJcbiAgICAnL3RlY2gvcHJvZmlsZScsXHJcbiAgICAnL3RlY2gvcmV2aWV3RXhhbScsXHJcbiAgICAnL3RlY2gvcHJpbnRFeGFtJyxcclxuICAgICcvdGVjaC9wcm9maWxlJyxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1pZGRsZXdhcmUocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcclxuICBjb25zb2xlLmxvZygnLS0tLS0tLS0gTWlkZGxld2FyZSBTdGFydCAtLS0tLS0tLScpO1xyXG4gIGNvbnNvbGUubG9nKCdSZXF1ZXN0IHBhdGg6JywgcmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lKTtcclxuXHJcbiAgY29uc3QgcmVkaXJlY3RDb3VudCA9IHBhcnNlSW50KFxyXG4gICAgcmVxdWVzdC5oZWFkZXJzLmdldCgneC1yZWRpcmVjdC1jb3VudCcpIHx8ICcwJ1xyXG4gICk7XHJcbiAgY29uc29sZS5sb2coJ0N1cnJlbnQgcmVkaXJlY3QgY291bnQ6JywgcmVkaXJlY3RDb3VudCk7XHJcblxyXG4gIGlmIChyZWRpcmVjdENvdW50ID49IE1BWF9SRURJUkVDVFMpIHtcclxuICAgIGNvbnNvbGUubG9nKCdNYXggcmVkaXJlY3RzIHJlYWNoZWQsIGdvaW5nIHRvIGVycm9yIHBhZ2UnKTtcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL2Vycm9yJywgcmVxdWVzdC51cmwpKTtcclxuICB9XHJcblxyXG4gIGNvbnN0IHVzZXJFbWFpbCA9IHJlcXVlc3QuY29va2llcy5nZXQoJ3VzZXJFbWFpbCcpPy52YWx1ZTtcclxuICBjb25zdCB1c2VyUm9sZSA9IHJlcXVlc3QuY29va2llcy5nZXQoJ3JvbGUnKT8udmFsdWU7XHJcbiAgY29uc3QgdXNlcklkID0gcmVxdWVzdC5jb29raWVzLmdldCgndXNlcklkJyk/LnZhbHVlO1xyXG5cclxuICBjb25zb2xlLmxvZygnVXNlciBlbWFpbDonLCB1c2VyRW1haWwpO1xyXG4gIGNvbnNvbGUubG9nKCdVc2VyIHJvbGU6JywgdXNlclJvbGUpO1xyXG4gIGNvbnNvbGUubG9nKCdVc2VyIElEOicsIHVzZXJJZCk7XHJcblxyXG4gIGlmIChcclxuICAgIHJlcXVlc3QubmV4dFVybC5wYXRobmFtZSA9PT0gJy9zaWduLWluJyB8fFxyXG4gICAgcmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lID09PSAnL2Vycm9yJ1xyXG4gICkge1xyXG4gICAgY29uc29sZS5sb2coJ09uIHNpZ24taW4gb3IgZXJyb3IgcGFnZSwgbm8gcmVkaXJlY3QnKTtcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UubmV4dCgpO1xyXG4gIH1cclxuXHJcbiAgaWYgKCF1c2VyRW1haWwpIHtcclxuICAgIGNvbnNvbGUubG9nKCdObyB1c2VyIGVtYWlsLCByZWRpcmVjdGluZyB0byBzaWduLWluJyk7XHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy9zaWduLWluJywgcmVxdWVzdC51cmwpKTtcclxuICB9XHJcblxyXG4gIGNvbnN0IGFsbG93ZWRQYXRocyA9IHJvbGVQYXRoc1t1c2VyUm9sZSBhcyBrZXlvZiB0eXBlb2Ygcm9sZVBhdGhzXTtcclxuICBjb25zb2xlLmxvZygnQWxsb3dlZCBwYXRocyBmb3Igcm9sZTonLCBhbGxvd2VkUGF0aHMpO1xyXG5cclxuICBpZiAoYWxsb3dlZFBhdGhzKSB7XHJcbiAgICAvLyBDaGVjayBpZiB0aGUgY3VycmVudCBwYXRoIHN0YXJ0cyB3aXRoIGFueSBvZiB0aGUgYWxsb3dlZCBwYXRoc1xyXG4gICAgY29uc3QgaXNBbGxvd2VkUGF0aCA9IGFsbG93ZWRQYXRocy5zb21lKChwYXRoKSA9PlxyXG4gICAgICByZXF1ZXN0Lm5leHRVcmwucGF0aG5hbWUuc3RhcnRzV2l0aChwYXRoKVxyXG4gICAgKTtcclxuICAgIGNvbnNvbGUubG9nKCdJcyBhbGxvd2VkIHBhdGg6JywgaXNBbGxvd2VkUGF0aCk7XHJcblxyXG4gICAgaWYgKCFpc0FsbG93ZWRQYXRoKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdVc2VyIHRyaWVkIHRvIGFjY2VzcyBhIHJlc3RyaWN0ZWQgcGF0aCcpO1xyXG5cclxuICAgICAgLy8gU3BlY2lhbCBjYXNlIGZvciBBZG1pbiB0cnlpbmcgdG8gYWNjZXNzIGVkaXRVc2VyIHBhZ2VcclxuICAgICAgaWYgKFxyXG4gICAgICAgIHVzZXJSb2xlID09PSAnQWRtaW4nICYmXHJcbiAgICAgICAgcmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9hZG1pbi9lZGl0VXNlci8nKVxyXG4gICAgICApIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnQWRtaW4gYWNjZXNzaW5nIGVkaXRVc2VyIHBhZ2UnKTtcclxuICAgICAgICBjb25zdCByZWRpcmVjdFVybCA9IG5ldyBVUkwoYC9hZG1pbi9lZGl0VXNlci8ke3VzZXJJZH1gLCByZXF1ZXN0LnVybCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ1JlZGlyZWN0aW5nIHRvOicsIHJlZGlyZWN0VXJsLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgIGNvbnN0IG5ld1Jlc3BvbnNlID0gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KHJlZGlyZWN0VXJsKTtcclxuICAgICAgICBuZXdSZXNwb25zZS5oZWFkZXJzLnNldChcclxuICAgICAgICAgICd4LXJlZGlyZWN0LWNvdW50JyxcclxuICAgICAgICAgIChyZWRpcmVjdENvdW50ICsgMSkudG9TdHJpbmcoKVxyXG4gICAgICAgICk7XHJcbiAgICAgICAgcmV0dXJuIG5ld1Jlc3BvbnNlO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zb2xlLmxvZygnUmVkaXJlY3RpbmcgdG8gZGVmYXVsdCByb2xlIHBhdGgnKTtcclxuICAgICAgY29uc3QgZGVmYXVsdFJlZGlyZWN0VXJsID0gbmV3IFVSTChhbGxvd2VkUGF0aHNbMF0sIHJlcXVlc3QudXJsKTtcclxuICAgICAgY29uc29sZS5sb2coJ0RlZmF1bHQgcmVkaXJlY3QgVVJMOicsIGRlZmF1bHRSZWRpcmVjdFVybC50b1N0cmluZygpKTtcclxuICAgICAgY29uc3QgbmV3UmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UucmVkaXJlY3QoZGVmYXVsdFJlZGlyZWN0VXJsKTtcclxuICAgICAgbmV3UmVzcG9uc2UuaGVhZGVycy5zZXQoXHJcbiAgICAgICAgJ3gtcmVkaXJlY3QtY291bnQnLFxyXG4gICAgICAgIChyZWRpcmVjdENvdW50ICsgMSkudG9TdHJpbmcoKVxyXG4gICAgICApO1xyXG4gICAgICByZXR1cm4gbmV3UmVzcG9uc2U7XHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIGNvbnNvbGUubG9nKCdVc2VyIHJvbGUgbm90IHJlY29nbml6ZWQsIHJlZGlyZWN0aW5nIHRvIGRlZmF1bHQgcGF0aCcpO1xyXG4gICAgY29uc3QgcmVkaXJlY3RVcmwgPSBnZXRSb2xlQmFzZWRSZWRpcmVjdCh1c2VyUm9sZSwgcmVxdWVzdC51cmwpO1xyXG4gICAgaWYgKHJlZGlyZWN0VXJsKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdSZWRpcmVjdGluZyB0byByb2xlLWJhc2VkIFVSTDonLCByZWRpcmVjdFVybC50b1N0cmluZygpKTtcclxuICAgICAgY29uc3QgbmV3UmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UucmVkaXJlY3QocmVkaXJlY3RVcmwpO1xyXG4gICAgICBuZXdSZXNwb25zZS5oZWFkZXJzLnNldChcclxuICAgICAgICAneC1yZWRpcmVjdC1jb3VudCcsXHJcbiAgICAgICAgKHJlZGlyZWN0Q291bnQgKyAxKS50b1N0cmluZygpXHJcbiAgICAgICk7XHJcbiAgICAgIHJldHVybiBuZXdSZXNwb25zZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNvbnNvbGUubG9nKCdObyByZWRpcmVjdCBuZWVkZWQsIHByb2NlZWRpbmcgdG8gcmVxdWVzdGVkIHBhZ2UnKTtcclxuICBjb25zb2xlLmxvZygnLS0tLS0tLS0gTWlkZGxld2FyZSBFbmQgLS0tLS0tLS0nKTtcclxuICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0Um9sZUJhc2VkUmVkaXJlY3QoXHJcbiAgcm9sZTogc3RyaW5nIHwgdW5kZWZpbmVkLFxyXG4gIGJhc2VVcmw6IHN0cmluZ1xyXG4pOiBVUkwgfCBudWxsIHtcclxuICBjb25zb2xlLmxvZygnR2V0dGluZyByb2xlLWJhc2VkIHJlZGlyZWN0IGZvciByb2xlOicsIHJvbGUpO1xyXG4gIGxldCByZWRpcmVjdFVybDogVVJMIHwgbnVsbCA9IG51bGw7XHJcbiAgc3dpdGNoIChyb2xlKSB7XHJcbiAgICBjYXNlICdBZG1pbic6XHJcbiAgICAgIHJlZGlyZWN0VXJsID0gbmV3IFVSTCgnL2FkbWluL2Rhc2hCb2FyZCcsIGJhc2VVcmwpO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgJ0luc3RydWN0b3InOlxyXG4gICAgICByZWRpcmVjdFVybCA9IG5ldyBVUkwoJy9pbnN0cnVjdG9yL2Rhc2hCb2FyZCcsIGJhc2VVcmwpO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgJ0V4YW1PZmZpY2VyJzpcclxuICAgICAgcmVkaXJlY3RVcmwgPSBuZXcgVVJMKCcvZXhhbS1vZmZpY2VyL2Rhc2hCb2FyZCcsIGJhc2VVcmwpO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgJ1RlY2hVbml0JzpcclxuICAgICAgcmVkaXJlY3RVcmwgPSBuZXcgVVJMKCcvdGVjaC9kYXNoQm9hcmQnLCBiYXNlVXJsKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBkZWZhdWx0OlxyXG4gICAgICByZWRpcmVjdFVybCA9IG51bGw7XHJcbiAgfVxyXG4gIGNvbnNvbGUubG9nKCdSZWRpcmVjdCBVUkw6JywgcmVkaXJlY3RVcmw/LnRvU3RyaW5nKCkgfHwgJ251bGwnKTtcclxuICByZXR1cm4gcmVkaXJlY3RVcmw7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbiAgbWF0Y2hlcjogWycvKCg/IWFwaXxfbmV4dC9zdGF0aWN8X25leHQvaW1hZ2V8ZmF2aWNvbi5pY298YXNzZXRzKS4qKSddLFxyXG59O1xyXG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiTUFYX1JFRElSRUNUUyIsInJvbGVQYXRocyIsIkFkbWluIiwiSW5zdHJ1Y3RvciIsIkV4YW1PZmZpY2VyIiwiVGVjaFVuaXQiLCJtaWRkbGV3YXJlIiwicmVxdWVzdCIsImNvbnNvbGUiLCJsb2ciLCJuZXh0VXJsIiwicGF0aG5hbWUiLCJyZWRpcmVjdENvdW50IiwicGFyc2VJbnQiLCJoZWFkZXJzIiwiZ2V0IiwicmVkaXJlY3QiLCJVUkwiLCJ1cmwiLCJ1c2VyRW1haWwiLCJjb29raWVzIiwidmFsdWUiLCJ1c2VyUm9sZSIsInVzZXJJZCIsIm5leHQiLCJhbGxvd2VkUGF0aHMiLCJpc0FsbG93ZWRQYXRoIiwic29tZSIsInBhdGgiLCJzdGFydHNXaXRoIiwicmVkaXJlY3RVcmwiLCJ0b1N0cmluZyIsIm5ld1Jlc3BvbnNlIiwic2V0IiwiZGVmYXVsdFJlZGlyZWN0VXJsIiwiZ2V0Um9sZUJhc2VkUmVkaXJlY3QiLCJyb2xlIiwiYmFzZVVybCIsImNvbmZpZyIsIm1hdGNoZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ })

});