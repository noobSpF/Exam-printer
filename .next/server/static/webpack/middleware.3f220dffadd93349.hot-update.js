"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\nconst MAX_REDIRECTS = 5;\nconst rolePaths = {\n    Admin: [\n        \"/admin/dashBoard\",\n        \"/admin/addUser\",\n        \"/admin/editUser\"\n    ],\n    Instructor: [\n        \"/instructor/dashBoard\",\n        \"/instructor/profile\",\n        \"/instructor/addExam\"\n    ],\n    ExamOfficer: [\n        \"/exam-officer/dashBoard\",\n        \"/exam-officer/profile\",\n        \"/exam-officer/addSubject\",\n        \"/exam-officer/backupExam\"\n    ],\n    TechUnit: [\n        \"/tech/dashBoard\",\n        \"/tech/profile\",\n        \"/tech/reviewExam\"\n    ]\n};\nasync function middleware(request) {\n    console.log(\"-------- Middleware Start --------\");\n    console.log(\"Request path:\", request.nextUrl.pathname);\n    const redirectCount = parseInt(request.headers.get(\"x-redirect-count\") || \"0\");\n    console.log(\"Current redirect count:\", redirectCount);\n    if (redirectCount >= MAX_REDIRECTS) {\n        console.log(\"Max redirects reached, going to error page\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(\"/error\", request.url));\n    }\n    const userEmail = request.cookies.get(\"userEmail\")?.value;\n    const userRole = request.cookies.get(\"role\")?.value;\n    const userId = request.cookies.get(\"userId\")?.value;\n    console.log(\"User email:\", userEmail);\n    console.log(\"User role:\", userRole);\n    console.log(\"User ID:\", userId);\n    if (request.nextUrl.pathname === \"/sign-in\" || request.nextUrl.pathname === \"/error\") {\n        console.log(\"On sign-in or error page, no redirect\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    }\n    if (!userEmail) {\n        console.log(\"No user email, redirecting to sign-in\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(\"/sign-in\", request.url));\n    }\n    const allowedPaths = rolePaths[userRole];\n    console.log(\"Allowed paths for role:\", allowedPaths);\n    if (allowedPaths) {\n        // Check if the current path starts with any of the allowed paths\n        const isAllowedPath = allowedPaths.some((path)=>request.nextUrl.pathname.startsWith(path));\n        console.log(\"Is allowed path:\", isAllowedPath);\n        if (!isAllowedPath) {\n            console.log(\"User tried to access a restricted path\");\n            // Special case for Admin trying to access editUser page\n            if (userRole === \"Admin\" && request.nextUrl.pathname.startsWith(\"/admin/editUser/\")) {\n                console.log(\"Admin accessing editUser page\");\n                const redirectUrl = new URL(`/admin/editUser/${userId}`, request.url);\n                console.log(\"Redirecting to:\", redirectUrl.toString());\n                const newResponse = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(redirectUrl);\n                newResponse.headers.set(\"x-redirect-count\", (redirectCount + 1).toString());\n                return newResponse;\n            }\n            console.log(\"Redirecting to default role path\");\n            const defaultRedirectUrl = new URL(allowedPaths[0], request.url);\n            console.log(\"Default redirect URL:\", defaultRedirectUrl.toString());\n            const newResponse = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(defaultRedirectUrl);\n            newResponse.headers.set(\"x-redirect-count\", (redirectCount + 1).toString());\n            return newResponse;\n        }\n    } else {\n        console.log(\"User role not recognized, redirecting to default path\");\n        const redirectUrl = getRoleBasedRedirect(userRole, request.url);\n        if (redirectUrl) {\n            console.log(\"Redirecting to role-based URL:\", redirectUrl.toString());\n            const newResponse = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(redirectUrl);\n            newResponse.headers.set(\"x-redirect-count\", (redirectCount + 1).toString());\n            return newResponse;\n        }\n    }\n    console.log(\"No redirect needed, proceeding to requested page\");\n    console.log(\"-------- Middleware End --------\");\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n}\nfunction getRoleBasedRedirect(role, baseUrl) {\n    console.log(\"Getting role-based redirect for role:\", role);\n    let redirectUrl = null;\n    switch(role){\n        case \"Admin\":\n            redirectUrl = new URL(\"/admin/dashBoard\", baseUrl);\n            break;\n        case \"Instructor\":\n            redirectUrl = new URL(\"/instructor/dashBoard\", baseUrl);\n            break;\n        case \"ExamOfficer\":\n            redirectUrl = new URL(\"/exam-officer/dashBoard\", baseUrl);\n            break;\n        case \"TechUnit\":\n            redirectUrl = new URL(\"/tech/dashBoard\", baseUrl);\n            break;\n        default:\n            redirectUrl = null;\n    }\n    console.log(\"Redirect URL:\", redirectUrl?.toString() || \"null\");\n    return redirectUrl;\n}\nconst config = {\n    matcher: [\n        \"/((?!api|_next/static|_next/image|favicon.ico|assets).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ })

});